const dayStart = "07:30";
const dayEnd = "17:45";

const startTime = new Date();
startTime.setHours(dayStart.substring(0, 2));
startTime.setMinutes(dayStart.substring(3, 5));

const endTime = new Date();
endTime.setHours(dayEnd.substring(0, 2));
endTime.setMinutes(dayEnd.substring(3, 5));

const verifyHour = new RegExp(/^(0[0-9]|1[0-9]|2[0-3])$/);
const verifyMinute = new RegExp(/^[0-5][0-9]$/)
const times = [
  ["7:00", 15],
  ["07:15", 30],
  ["7:30", 30],
  ["11:30", 60],
  ["17:00", 45],
  ["17:30", 30],
  ["18:00", 15],
];

function scheduleMeeting(times) {
 const results = [];

  times.forEach((time) => {

    // Verify semicolon in right position
    if(time[0][1] === ":") {
      time[0] = "0" + time[0];
    }

    // Verify Hour
    if(!verifyHour.test(time[0][0] + time[0][1])) {
      results.push(false);
    } 
    // Verify Minute
    else if (!verifyMinute.test(time[0][3] + time[0][4])) {
      results.push(false);
    } 
    // If format of time correct then proceed
    else {
      // Convert time to Date() JS format
      const meetingTime = new Date();
      meetingTime.setHours(time[0].substring(0, 2));
      meetingTime.setMinutes(time[0].substring(3, 5));

      const endMeetingTime = meetingTime.getTime() + time[1] * 60 * 1000;

      // Verify not before start of day
      if(meetingTime < startTime) {
        results.push(false);
      } 
      // Verify not starting after end of day
      else if (meetingTime.getTime() > endTime){
        results.push(false);
      }
      // Verify meeting doesn't go past end of day
      else if (endMeetingTime > endTime) {
        results.push(false);
      }
      // Meeting time works --- return true
      else {
        results.push(true);
      }
    }
  });

  results.forEach((result) => console.log(result));
  return;
}

scheduleMeeting(times);